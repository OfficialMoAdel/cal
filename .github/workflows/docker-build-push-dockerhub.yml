name: Build and push image to DockerHub

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  workflow_run:
    workflows: ["Update Calendso"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Git submodule update
        run: git submodule update --init

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/officialmoadel/cal
            ghcr.io/officialmoadel/cal
          flavor: |
            latest=${{ !github.event.release.prerelease }}

      - name: Copy environment variables
        run: |
          grep -o '^[^#]*' .env.example > .env
          cat .env >> $GITHUB_ENV
          echo "DATABASE_HOST=127.0.0.1:5432" >> $GITHUB_ENV
          eval $(sed -e '/^#/d' -e 's/^/export /' -e 's/$/;/' .env) ;

      - name: Start database
        run: docker compose up -d database

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          load: true
          push: false
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Test runtime
        run: |
          tags="${{ steps.meta.outputs.tags }}"
          IFS=',' read -ra ADDR <<< "$tags"
          tag=${ADDR[0]}

          docker run --rm --network stack \
            -p 3000:3000 \
            -e DATABASE_URL=postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@database/${{ env.POSTGRES_DB }} \
            $tag &

          server_pid=$!
          echo "Waiting for server startup..."

          for i in {1..120}; do
            response=$(curl -o /dev/null -s -w "%{http_code}" ${{ env.NEXT_PUBLIC_WEBAPP_URL }}/auth/login)
            echo "HTTP Status Code: $response"
            if [[ "$response" == "200" ]] || [[ "$response" == "307" ]]; then
              echo "Server is healthy"
              kill $server_pid
              exit 0
            fi
            sleep 1
          done

          echo "Server health check failed"
          kill $server_pid
          exit 1
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          CALENDSO_ENCRYPTION_KEY: ${{ secrets.CALENDSO_ENCRYPTION_KEY }}

      - name: Push image
        id: docker_push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Cleanup
        run: docker compose down
